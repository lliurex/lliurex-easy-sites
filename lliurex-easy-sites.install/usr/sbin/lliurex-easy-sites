#!/usr/bin/env python

import sys
import os
import os.path
import signal
import gi
gi.require_version('Gtk','3.0')
from gi.repository import Gtk, Gdk,GObject,GLib
from subprocess import call
import subprocess
import locale
import shutil
import gettext

_=gettext.gettext



gettext.textdomain('lliurex-easy-sites')

signal.signal(signal.SIGINT, signal.SIG_DFL)

class LliurexEasySites:

	EASY_SITES_GLADE="/usr/share/lliurex-easy-sites/rsrc/lliurex-easy-sites.glade"
	EASY_SITES_GATHERER_GLADE="/usr/share/lliurex-easy-sites/rsrc/lliurex-easy-sites-gatherer.glade"
	
	def __init__(self):
		
		self.easy_sites={}
		self.button_counter=0
		self.scroll_me=False
		
	#def init

	
	def close_window(self,widget):

		Gtk.main_quit()
		sys.exit(0)

	#def close_window
	
	
	def gatherer_close_window(self,widget):

		self.windowGatherer.destroy()

	#def close_window
	
	
	def gatherer_add_site(self,widget):
		
		
		print(self.title.text)
		
	#def gatherer_add_site(self,widget)	
	
	
	def easy_sites_click(self,widget,id):
		
		print self.easy_sites[id]
		self.delete_button(id)
		
	#def easy_sites_click
	
	
	def addButtonSite(self,widget,easy_site=None):

		self.build_gatherer()
		
	#def addButtonSite
	
	
	def add_site(self,easy_site):
		
		self.button_counter+=1
		id=self.button_counter
		# Create gtkBox
		self.site_hbox=Gtk.HBox(True,1)
		self.site_hbox.show()
		
		self.easy_sites[id]={}
		self.easy_sites[id]["name"]=easy_site.setdefault("name","ola")
		self.easy_sites[id]["description"]=easy_site.setdefault("description","ola")
		#self.easy_sites[id]["button"]=Gtk.Button("Delete "+ self.easy_sites[id]["name"])
		image = Gtk.Image(stock=Gtk.STOCK_DELETE)
		self.easy_sites[id]["button"] = Gtk.Button(label="Delete "+ self.easy_sites[id]["name"], image=image)
		self.easy_sites[id]["button"].show()
		self.easy_sites[id]["button"].connect("clicked",self.easy_sites_click,id)
		
		# A partir de aqui con Miguel
		self.label_info=Gtk.Label(self.easy_sites[id]["name"])
		self.label_info.show()
		
		# Esto anyade a la caja
		self.site_hbox.pack_start(self.label_info, True, True,1)
		self.site_hbox.pack_start(self.easy_sites[id]["button"],False,False,5)
		
		self.boxButtons.pack_start(self.site_hbox, False,False,5)
		
		self.scroll_me=True

	#def add_site()
	
	
	def delete_button(self,id):
		"""
		Delete button action
		"""
		site_to_remove=self.easy_sites[id]["name"]
		print(site_to_remove)
		
		dialog = Gtk.MessageDialog(self.window,Gtk.DialogFlags.MODAL,Gtk.MessageType.QUESTION, Gtk.ButtonsType.YES_NO, "Are you sure that you want remove ")
		dialog.format_secondary_text(str(site_to_remove))
		response = dialog.run()
		if response == Gtk.ResponseType.YES:
			try:
				subprocess.check_output(["lliurex-easy-sites-cli", "remove",site_to_remove])
				try:
					#self.boxButtons.remove(self.easy_sites[id]["button"])
					self.boxButtons.remove(self.easy_sites[id]["button"].get_parent())
				except Exception as e:
					print("No tenemos ni cochina idea")

			except Exception as e:
				print(str(e))
		elif response == Gtk.ResponseType.NO:
			print ("QUESTION dialog closed by clicking NO button")
		dialog.destroy()

	#def delete_button
	
	
	def button_add_site(self,widget):
		"""
		Method to recollect information from gtk entries
		and create the site.
		"""
		description=""
		title=self.entryTitle.get_text()
		path=self.filechooserbuttonPath.get_filename()
		description="easy-site"
		if title != None and path != None:
			print("[ DEBUG ] "+ title +" Path "+ path + " Description "+description )
			easy_site={}
			easy_site["name"]=title
			easy_site["path"]=path
			easy_site["description"]=description
			try:
				# Execute the script
				os.system("lliurex-easy-sites-cli create %s %s %s"%(title,easy_site["path"],easy_site["description"]))
				#subprocess.check_output(["lliurex-easy-sites-cli", "create",title,easy_site["path"],easy_site["description"]])
			except Exception as e:
				print (str(e))
			lliurexEasySites.add_site(easy_site)
		
		self.windowGatherer.destroy()
			
	#def button_add_site
	
	def build_gatherer(self):
		"""
		Build a gatherer window information for a custom site
		This gui replenish info like:
			Title
			Path
			Description
		"""
	
		builderGatherer = Gtk.Builder()
		builderGatherer.set_translation_domain('lliurex-easy-sites')
		builderGatherer.add_from_file(self.EASY_SITES_GATHERER_GLADE)
		
		self.windowGatherer=builderGatherer.get_object("windowGatherer")
		self.windowGatherer.connect("destroy",lliurexEasySites.gatherer_close_window)

		# Title
		self.entryTitle=builderGatherer.get_object("entryTitle")
		self.filechooserbuttonPath=builderGatherer.get_object("filechooserbuttonPath")
		# Remove the filechooserbuttonPath previosluy selected 
		self.filechooserbuttonPath.set_filename("")
		
		#self.entryDescription=builderGatherer.get_object("entryDescription")

		self.buttonAccept=builderGatherer.get_object("buttonAccept")
		self.buttonAccept.connect("clicked",lliurexEasySites.button_add_site)
		
		self.windowGatherer.show_all()
		
	#def build_gatherer(self)
	
	def build_gui(self):
		"""
		Create the gui for the LliureX Easy Sites
		"""
	
		builder = Gtk.Builder()
		builder.set_translation_domain('lliurex-easy-sites')
		builder.add_from_file(self.EASY_SITES_GLADE)
		
		self.window=builder.get_object("MainWindow")
		self.window.connect("destroy",lliurexEasySites.close_window)
		
		# Afig button
		self.buttonAdd=builder.get_object("buttonAdd")
		self.buttonAdd.connect("clicked",self.addButtonSite)
		
		#boxButtons
		self.boxButtons=builder.get_object("boxButtons")
		self.boxButtons.connect("size-allocate",self.boxButtons_changed)
		
		
		self.scroll=builder.get_object("scrolledwindow1")
		
		self.window.show_all()

	#def build_gui
	
	def boxButtons_changed(self,widget,event):

		if self.scroll_me:
			adj = self.scroll.get_vadjustment()
			adj.set_value( adj.get_upper() - adj.get_page_size() )
			self.scroll_me=False
	
	def replenish_sites(self):
		"""
		Replenish sites from system
		"""
		lista=subprocess.check_output(["lliurex-easy-sites-cli", "list"]).strip("\n")
		print(lista)
		for item in lista.split("\n"):
			if item!="":
				easy_site={}
				easy_site["name"]=str(item)
				lliurexEasySites.add_site(easy_site)
	# def replenish sites
	

#class LliurexEasySites:	



if __name__== "__main__":

	lliurexEasySites=LliurexEasySites()
	lliurexEasySites.build_gui()
	lliurexEasySites.replenish_sites()
	"""
	easy_site={}
	easy_site["name"]="Una web muy chula"
	
	lliurexEasySites.add_site(easy_site)
	easy_site["name"]="Otra web no tan guay"
	
	lliurexEasySites.add_site(easy_site)
	"""
	GObject.threads_init()
	Gtk.main()
	GObject.threads_leave()
